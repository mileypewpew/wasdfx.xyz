import { type RuntimeSettings, type Character } from '@elizaos/core';
/**
 * Manages configuration loading and character settings
 */
export declare class ConfigManager {
    /**
     * Load environment configuration for runtime
     *
     * Loads environment variables from the project's .env file and returns them as runtime settings.
     */
    loadEnvConfig(): Promise<RuntimeSettings>;
    /**
     * Find the .env file in the project
     */
    private findEnvFile;
    /**
     * Validates if a character has secrets configured
     */
    hasCharacterSecrets(character: Character): boolean;
    /**
     * Ensures character has a settings object
     */
    private ensureCharacterSettings;
    /**
     * Loads secrets from local .env file
     */
    loadLocalEnvSecrets(): Promise<Record<string, string> | null>;
    /**
     * Sets default secrets from local .env if character doesn't have any
     */
    setDefaultSecretsFromEnv(character: Character): Promise<boolean>;
}
