import { type Plugin } from '@elizaos/core';
/**
 * Manages plugin loading and dependency resolution
 */
export declare class PluginLoader {
    /**
     * Check if an object has a valid plugin shape
     */
    isValidPluginShape(obj: any): obj is Plugin;
    /**
     * Validate a plugin's structure
     */
    validatePlugin(plugin: any): {
        isValid: boolean;
        errors: string[];
    };
    /**
     * Load and prepare a plugin for use
     */
    loadAndPreparePlugin(pluginName: string): Promise<Plugin | null>;
    /**
     * Resolve plugin dependencies with circular dependency detection
     *
     * Performs topological sorting of plugins to ensure dependencies are loaded in the correct order.
     */
    resolvePluginDependencies(availablePlugins: Map<string, Plugin>, isTestMode?: boolean): Plugin[];
}
